// Generated by CoffeeScript 1.9.2
var asyncsplit, split;

split = require('./split');

asyncsplit = require('./asyncsplit');

module.exports = function(exe, queries) {
  var build, result;
  result = [];
  build = function(isAsync, queries) {
    var fn, key, keys, query, ref;
    ref = queries.local;
    fn = function(key, query) {
      query = exe.build(query);
      return result.push({
        isAsync: isAsync,
        keys: [key],
        query: function(cb) {
          return query(function(err, res) {
            var returnresult;
            if (err != null) {
              returnresult = {};
              returnresult[key] = err;
              return cb(returnresult);
            }
            returnresult = {};
            returnresult[key] = res;
            return cb(null, returnresult);
          });
        }
      });
    };
    for (key in ref) {
      query = ref[key];
      fn(key, query);
    }
    keys = Object.keys(queries.remote);
    if (keys.length !== 0) {
      return result.push({
        isAsync: isAsync,
        keys: keys,
        query: exe.providers.__dynamic(exe, {
          __q: '__dynamic',
          __p: keys,
          __s: queries.remote
        })
      });
    }
  };
  queries = asyncsplit(exe, queries);
  console.log('optimise1');
  console.log(queries);
  queries = {
    sync: split(exe, queries.sync),
    async: split(exe, queries.async)
  };
  console.log('optimise2');
  console.log(queries);
  build(false, queries.sync);
  build(true, queries.async);
  return result;
};
